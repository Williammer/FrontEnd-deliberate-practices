{"version":3,"sources":["components/SearchBar.jsx","components/ItemList.jsx","features/githubUserList/GithubUserList.jsx"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchInput","React","createRef","onKeyPress","bind","assertThisInitialized","_props$debounce","debounce","debounceTime","search","searchDebounced","_ref","key","value","current","searchHandler","cancel","_this$props","name","label","instant","placeholder","react_default","a","createElement","htmlFor","concat","TextField_default","margin","inputRef","onChange","Button_default","color","variant","size","onClick","PureComponent","defaultProps","ItemList","nextProps","isEqual","list","renderHeader","classes","customListClass","List_default","dense","className","classNames","itemList","map","item","index","ListItem_default","ListItemIcon_default","StarBorder_default","ListItemText_default","inset","Component","withStyles","theme","width","NoResult","username","message","Fetching","GithubUserList","fetch","filter","updateKeyword","keyword","updateSearchKeyword","updateUsername","fetchUserRepos","updateRepos","repos","searchKeyword","repo","includes","_this$props2","fetching","error","SearchBar_SearchBar","length","components_ItemList","connect","state","githubUserListReducer"],"mappings":"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","file":"static/js/8.1d347844.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class SearchBar extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.searchInput = React.createRef();\n    this.onKeyPress = this.onKeyPress.bind(this);\n\n    const { debounce: debounceTime = 0 } = props;\n    this.search = this.search.bind(this);\n    this.searchDebounced = debounceTime > 0 ? debounce(this.search, debounceTime) : this.search;\n  }\n\n  onKeyPress({ key }) {\n    if (key === 'Enter') {\n      this.search();\n    }\n  }\n\n  search() {\n    const value = this.searchInput.current.value;\n    this.props.searchHandler(value);\n  }\n\n  componentWillUnmount() {\n    if (this.props.debounceTime > 0) {\n      this.searchDebounced.cancel();\n    }\n  }\n\n  render() {\n    const { name, label, instant, placeholder } = this.props;\n    return (\n      <div>\n          <label htmlFor={name}>\n            {`${label} `}\n          </label>\n          <TextField\n            name={name}\n            margin=\"normal\"\n            inputRef={this.searchInput}\n            onChange={!instant ? null : this.searchDebounced}\n            onKeyPress={instant ? null : this.onKeyPress}\n            placeholder={placeholder}\n          />{' '}\n        {instant ? null : (\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={this.search}>\n            Search\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\nSearchBar.propTypes = {\n  instant: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  searchHandler: PropTypes.func.isRequired,\n};\nSearchBar.defaultProps = {\n  placeholder: 'input to search',\n  instant: false,\n  label: '',\n  name: '',\n  searchHandler: () => {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst styles = theme => ({\n  itemList: {\n    width: 400,\n    margin: 'auto',\n  },\n});\nclass ItemList extends Component {\n  shouldComponentUpdate(nextProps) {\n    return !isEqual(nextProps.list, this.props.list);\n  }\n\n  render() {\n    const { list, renderHeader, classes, customListClass } = this.props;\n    return (\n      <div>\n        {renderHeader()}\n        <List dense className={classNames(classes.itemList, customListClass)}>\n          {list.map((item, index) => (\n            <ListItem key={index}>\n              <ListItemIcon>\n                <StarBorder />\n              </ListItemIcon>\n              <ListItemText inset>{item}</ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n}\nItemList.propTypes = {\n  list: PropTypes.array.isRequired,\n  renderHeader: PropTypes.func.isRequired,\n};\nItemList.defaultProps = {\n  list: [],\n  renderHeader: () => {},\n};\n\nexport default withStyles(styles)(ItemList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from '../../components/SearchBar';\nimport ItemList from '../../components/ItemList';\nimport './GithubUserList.css';\n\nimport { connect } from 'react-redux';\nimport {\n  updateSearchKeyword,\n  updateUsername,\n  fetchUserRepos,\n  updateRepos,\n} from './githubUserListActions';\n\nfunction NoResult(props) {\n  return (\n    <div>\n      <span className=\"label-no-repo\">\n        {`No repository found for \"${props.username}\"`}\n      </span>\n      <br />\n      <span className=\"label-error-message\">\n        {`Error message: ${props.message || ''}`}\n      </span>\n    </div>\n  );\n}\n\nfunction Fetching() {\n  return <span>fetching...</span>;\n}\n\nclass GithubUserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetch = this.fetch.bind(this);\n    this.filter = this.filter.bind(this);\n    this.updateKeyword = this.updateKeyword.bind(this);\n  }\n\n  updateKeyword(keyword) {\n    this.props.updateSearchKeyword(keyword);\n  }\n\n  fetch(username) {\n    this.props.updateSearchKeyword('');\n    this.props.updateUsername(username);\n    if (!username) {\n      this.props.updateRepos([]);\n      return;\n    }\n    this.props.fetchUserRepos(username);\n  }\n\n  filter() {\n    const { repos, searchKeyword } = this.props;\n    return repos.filter(repo => repo.includes(searchKeyword));\n  }\n\n  componentWillUnmount() {\n    this.props.updateUsername('');\n    this.props.updateSearchKeyword('');\n    this.props.updateRepos([]);\n  }\n\n  render() {\n    const { username, repos, fetching, error } = this.props;\n    return (\n      <div>\n        <SearchBar\n          searchHandler={this.fetch}\n          name=\"username\"\n          label=\"Get Github user repositories:\"\n        />\n        {fetching ? (\n          <Fetching />\n        ) : !username.length ? null : repos.length ? (\n          <div>\n            <SearchBar\n              searchHandler={this.updateKeyword}\n              name=\"searchBar\"\n              label=\"Search certain repository:\"\n              placeholder=\"input to filter\"\n              debounce=\"1000\"\n              instant\n            />\n            <ItemList\n              renderHeader={() => <h3>Repositories of {username}:</h3>}\n              list={this.filter()}\n            />\n          </div>\n        ) : (\n          <NoResult username={username} message={error} />\n        )}\n      </div>\n    );\n  }\n}\nGithubUserList.propTypes = {\n  repos: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  fetching: PropTypes.bool.isRequired,\n  searchKeyword: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  updateRepos: PropTypes.func.isRequired,\n  updateSearchKeyword: PropTypes.func.isRequired,\n  updateUsername: PropTypes.func.isRequired,\n  fetchUserRepos: PropTypes.func.isRequired,\n};\n\n// Redux handling\nconst mapStateToProps = state => ({\n  repos: state.githubUserListReducer.repos,\n  username: state.githubUserListReducer.username,\n  fetching: state.githubUserListReducer.fetching,\n  error: state.githubUserListReducer.error,\n  searchKeyword: state.githubUserListReducer.searchKeyword,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateRepos,\n    updateSearchKeyword,\n    updateUsername,\n    fetchUserRepos,\n  },\n)(GithubUserList);\n"],"sourceRoot":""}