{"version":3,"sources":["components/TreeviewNode.jsx","features/treeview/Treeview.jsx"],"names":["NodeIndicator","_ref","classes","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","LeafIndicator","_ref2","TreeviewNode","state","collapsed","_this","defaultCollapsed","toggleOpen","setState","_ref3","this","_this$props","content","children","treeviewWrap","indicator","node","leaf","treeviewContent","classNames","onClick","PureComponent","defaultProps","withStyles","theme","textAlign","marginLeft","display","marginRight","width","height","borderBottom","borderLeft","borderRight","borderTop","cursor","&.collapsed","borderRadius","border","visibility","treeData","TreeviewDemo","Fragment","renderTreeviewNode","nodeData","data","Array","isArray","map","index","components_TreeviewNode","key"],"mappings":"8LA2CA,SAASA,EAATC,GAA8C,IAArBC,EAAqBD,EAArBC,QAAYC,EAASC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,aAC5C,OAAOK,EAAAC,EAAAC,cAAA,MAAAJ,OAAAK,OAAA,GAASN,EAAT,CAAgBO,UAAWR,KAGpC,SAASS,EAATC,GAAoC,IAAXV,EAAWU,EAAXV,QACvB,OAAOI,EAAAC,EAAAC,cAAA,OAAKE,UAAWR,QAGnBW,6MACJC,MAAQ,CACNC,UAAWC,EAAKb,MAAMc,oBAGxBC,WAAa,WACXF,EAAKG,SAAS,SAAAC,GAAA,MAAoB,CAChCL,WADYK,EAAGL,sFAKV,IACCA,EAAcM,KAAKP,MAAnBC,UADDO,EAEgCD,KAAKlB,MAApCoB,EAFDD,EAECC,QAASC,EAFVF,EAEUE,SAAUtB,EAFpBoB,EAEoBpB,QACnBuB,EAAyDvB,EAAzDuB,aAAcC,EAA2CxB,EAA3CwB,UAAWC,EAAgCzB,EAAhCyB,KAAMC,EAA0B1B,EAA1B0B,KAAMC,EAAoB3B,EAApB2B,gBAE7C,OACEvB,EAAAC,EAAAC,cAAA,OAAKE,UAAWe,GACbD,EACClB,EAAAC,EAAAC,cAACR,EAAD,CACEE,QAAS4B,IAAWJ,EAAWC,EAAMZ,GAAa,aAClDgB,QAASV,KAAKH,aAGhBZ,EAAAC,EAAAC,cAACG,EAAD,CAAeT,QAAS4B,IAAWJ,EAAWE,KAEhDtB,EAAAC,EAAAC,cAAA,YAAOe,GACPjB,EAAAC,EAAAC,cAAA,OAAKE,UAAWoB,IAAWD,EAAiBd,GAAa,cACtDS,WA5BgBQ,iBAsC3BnB,EAAaoB,aAAe,CAC1BhB,kBAAkB,EAClBM,QAAS,iBAGIW,2BAzFA,SAAAC,GAAK,MAAK,CACvBV,aAAc,CACZW,UAAW,OACXC,WAAY,QAEdX,UAAW,CACTY,QAAS,eACTC,YAAa,QAEfZ,KAAM,CACJa,MAAO,EACPC,OAAQ,EACRC,aAAc,OACdC,WAAY,wBACZC,YAAa,wBACbC,UAAW,kBACXC,OAAQ,UACRC,cAAe,CACbF,UAAW,wBACXF,WAAY,mBACZD,aAAc,wBACdE,YAAa,SAGjBhB,KAAM,CACJoB,aAAc,MACdC,OAAQ,iBACRT,MAAO,EACPC,OAAQ,GAEVZ,gBAAiB,CACfkB,cAAe,CACbN,OAAQ,EACRS,WAAY,aAwDHhB,CAAmBrB,yCC3FlC,IAAMsC,EAAW,CACf,CACE5B,QAAS,UACTC,SAAU,CACRD,QAAS,UACTC,SAAU,CACR,CACED,QAAS,YACTC,SAAU,CAAC,CAAED,QAAS,aAAe,CAAEA,QAAS,eAElD,CAAEA,QAAS,aACX,CAAEA,QAAS,iBAmBJ,SAAS6B,IACtB,OAAO9C,EAAAC,EAAAC,cAACF,EAAAC,EAAM8C,SAAP,KAdT,SAASC,EAAmBC,GAC1B,IAAMC,EAAOC,MAAMC,QAAQH,GAAYA,EAAW,CAACA,GACnD,OACEjD,EAAAC,EAAAC,cAACF,EAAAC,EAAM8C,SAAP,KACGG,EAAKG,IAAI,SAAA1D,EAAyB2D,GAAzB,IAAGpC,EAAHvB,EAAGuB,SAAarB,EAAhBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,qBACRK,EAAAC,EAAAC,cAACqD,EAADzD,OAAAK,OAAA,GAAkBN,EAAlB,CAAyB2D,IAAKF,IAC3BpC,EAAW8B,EAAmB9B,GAAY,SAQ3B8B,CAAmBH","file":"static/js/14.afd2f9aa.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n  treeviewWrap: {\n    textAlign: 'left',\n    marginLeft: '18px',\n  },\n  indicator: {\n    display: 'inline-block',\n    marginRight: '10px',\n  },\n  node: {\n    width: 0,\n    height: 0,\n    borderBottom: 'none',\n    borderLeft: '5px solid transparent',\n    borderRight: '5px solid transparent',\n    borderTop: '10px solid #999',\n    cursor: 'pointer',\n    '&.collapsed': {\n      borderTop: '5px solid transparent',\n      borderLeft: '10px solid black',\n      borderBottom: '5px solid transparent',\n      borderRight: 'none',\n    },\n  },\n  leaf: {\n    borderRadius: '50%',\n    border: '5px solid #ccc',\n    width: 0,\n    height: 0,\n  },\n  treeviewContent: {\n    '&.collapsed': {\n      height: 0,\n      visibility: 'hidden',\n    },\n  },\n});\n\nfunction NodeIndicator({ classes, ...props }) {\n  return <div {...props} className={classes} />;\n}\n\nfunction LeafIndicator({ classes }) {\n  return <div className={classes} />;\n}\n\nclass TreeviewNode extends PureComponent {\n  state = {\n    collapsed: this.props.defaultCollapsed,\n  };\n\n  toggleOpen = () => {\n    this.setState(({ collapsed }) => ({\n      collapsed: !collapsed,\n    }));\n  };\n\n  render() {\n    const { collapsed } = this.state;\n    const { content, children, classes } = this.props;\n    const { treeviewWrap, indicator, node, leaf, treeviewContent } = classes;\n\n    return (\n      <div className={treeviewWrap}>\n        {children ? (\n          <NodeIndicator\n            classes={classNames(indicator, node, collapsed && 'collapsed')}\n            onClick={this.toggleOpen}\n          />\n        ) : (\n          <LeafIndicator classes={classNames(indicator, leaf)} />\n        )}\n        <span>{content}</span>\n        <div className={classNames(treeviewContent, collapsed && 'collapsed')}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\nTreeviewNode.propTypes = {\n  defaultCollapsed: PropTypes.bool,\n  content: PropTypes.string.isRequired,\n};\nTreeviewNode.defaultProps = {\n  defaultCollapsed: true,\n  content: 'treeview node',\n};\n\nexport default withStyles(styles)(TreeviewNode);\n","import React from 'react';\nimport TreeviewNode from '../../components/TreeviewNode';\n\nconst treeData = [\n  {\n    content: '1 layer',\n    children: {\n      content: '2 layer',\n      children: [\n        {\n          content: '3.1 layer',\n          children: [{ content: '4.1 layer' }, { content: '4.2 layer' }],\n        },\n        { content: '3.2 layer' },\n        { content: '3.3 layer' },\n      ],\n    },\n  },\n];\n\nfunction renderTreeviewNode(nodeData) {\n  const data = Array.isArray(nodeData) ? nodeData : [nodeData];\n  return (\n    <React.Fragment>\n      {data.map(({ children, ...props }, index) => (\n        <TreeviewNode {...props} key={index}>\n          {children ? renderTreeviewNode(children) : null}\n        </TreeviewNode>\n      ))}\n    </React.Fragment>\n  );\n}\n\nexport default function TreeviewDemo() {\n  return <React.Fragment>{renderTreeviewNode(treeData)}</React.Fragment>;\n}\n"],"sourceRoot":""}